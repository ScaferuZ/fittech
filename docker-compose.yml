version: "3.8"

services:
  # Flask Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: xgfitness-backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app/backend:/app/backend/src
    volumes:
      - ./data:/app/data:ro # Read-only data volume
      - backend_logs:/app/backend/logs
      - backend_models:/app/backend/models/saved
    networks:
      - app-network # Internal network for frontend-backend communication
      - web-gateway # External network for reverse proxy access
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:5000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend + Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-/api}
        - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
        - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
        - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
        - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
        - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
        - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
    container_name: xgfitness-frontend
    restart: unless-stopped
    # No ports exposed - accessed through reverse proxy
    depends_on:
      - backend
    networks:
      - app-network # Internal network for frontend-backend communication
      - web-gateway # External network for reverse proxy access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  backend_logs:
    driver: local
  backend_models:
    driver: local

networks:
  app-network:
    driver: bridge
  web-gateway: # External network managed by reverse proxy
    external: true
